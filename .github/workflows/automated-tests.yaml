
name: Automated Tests

on:
  push:
    branches:
      - '*'         # matches every branch
      - '*/*'       # matches every branch containing a single '/'
      #- '!master'   # excludes master
      #- '!develop'   # excludes develop

env:
  ENVIRONMENT: dev
  KUBECTL_VERSION: '1.18.2'
  KUSTOMIZE_VERSION: '3.5.3'
  SKAFFOLD_VERSION: '1.10.0'

jobs:
  automated-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Cache All
        id: cache-all
        uses: actions/cache@v2
        with:
          path: |
            cache-k8s-tools/kubectl
            cache-k8s-tools/kustomize
            cache-k8s-tools/skaffold
          key: all-k8s-tool-v2-{{ hashFiles('cache-k8s-tools/*') }}
      
      - name: Create cache folder
        if: steps.cache-all.outputs.cache-hit != 'true'
        run: |
          mkdir cache-k8s-tools

      - name: Manually install kubectl
        if: steps.cache-all.outputs.cache-hit != 'true'
        run: |
          curl -sL https://storage.googleapis.com/kubernetes-release/release/v${{env.KUBECTL_VERSION}}/bin/linux/amd64/kubectl -o cache-k8s-tools/kubectl
          sudo cp cache-k8s-tools/kubectl /usr/local/bin/kubectl
          sudo chmod 777 /usr/local/bin/kubectl
      
      - name: Kubectl Version
        run: |
          kubectl version --client=true
      
      - name: Manually install Kustomize
        if: steps.cache-kustomize.outputs.cache-hit != 'true'
        run:
          curl -sL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${{ env.KUSTOMIZE_VERSION }}/kustomize_v${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz | tar xz;
          mv kustomize cache-k8s-tools/kustomize;
          sudo cp cache-k8s-tools/kustomize /usr/local/bin/kustomize;
          sudo chmod 777 /usr/local/bin/kustomize;
      
      - name: Kustomize Version
        run: |
          kustomize version

      - name: Manually install skaffold
        # if: steps.cache-all.outputs.cache-hit != 'true'
        run: |
          curl -sL https://github.com/GoogleContainerTools/skaffold/releases/download/v${{env.SKAFFOLD_VERSION}}/skaffold-linux-amd64 -o cache-k8s-tools/skaffold
          sudo cp cache-k8s-tools/skaffold /usr/local/bin/skaffold
          sudo chmod 777 /usr/local/bin/skaffold
      
      - name: Skaffold version
        run: |
          echo 'testing cache-all strategy'
          ls -als /usr/local/bin
          skaffold version